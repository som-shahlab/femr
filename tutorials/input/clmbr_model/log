2023-07-08 12:39:01,401 [MainThread  ] [INFO ]  Training model with Namespace(directory='trash/tutorial_5/clmbr_model', data_path='input/extract', batches_path='trash/tutorial_5/clmbr_batches', learning_rate=0.0001, rotary_type='per_head', clmbr_survival_dim=None, num_batch_threads=3, start_from_checkpoint=None, freeze_weights=False, token_dropout=0, internal_dropout=0, weight_decay=0, max_iter=10, hidden_size=256, intermediate_size=256, n_heads=4, n_layers=1, attention_width=512, dev_batches_path=None, linear_probe=None, early_stopping_window_steps=None, with_age_beta=False)
2023-07-08 12:39:01,414 [MainThread  ] [INFO ]  Got config {'data_path': 'input/extract', 'batch_info_path': 'trash/tutorial_5/clmbr_batches/batch_info.msgpack', 'seed': 97, 'task': {'type': 'clmbr', 'vocab_size': 8192}, 'transformer': {'vocab_size': 2048, 'hidden_size': 256, 'intermediate_size': 256, 'n_heads': 4, 'n_layers': 1, 'rotary': 'per_head', 'attention_width': 496, 'internal_dropout': 0, 'is_hierarchical': False, 'note_embedding_data': None, 'with_age_beta': False}, 'learning_rate': 0.0001, 'max_grad_norm': 1.0, 'weight_decay': 0, 'n_epochs': 100}
2023-07-08 12:39:01,450 [MainThread  ] [INFO ]  Loaded batches 1 1
2023-07-08 12:39:01,668 [MainThread  ] [INFO ]  Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: Interpreter Host CUDA
2023-07-08 12:39:01,668 [MainThread  ] [INFO ]  Unable to initialize backend 'tpu': module 'jaxlib.xla_extension' has no attribute 'get_tpu_client'
2023-07-08 12:39:01,669 [MainThread  ] [INFO ]  Unable to initialize backend 'plugin': xla_extension has no attributes named get_plugin_device_client. Compile TensorFlow with //tensorflow/compiler/xla/python:enable_plugin_device set to true (defaults to false) to enable this.
2023-07-08 12:39:04,733 [MainThread  ] [INFO ]  Got dummy batch {'num_indices': ((), dtype('int32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'num_patients': ((), dtype('int32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'offsets': ((512,), dtype('uint32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'patient_ids': ((512,), dtype('int32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'task': {'labels': ((4096,), dtype('uint32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0))}, 'transformer': {'ages': ((16384,), dtype('float32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'integer_ages': ((16384,), dtype('uint32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'label_indices': ((4096,), dtype('uint32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'length': ((), dtype('int32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'normalized_ages': ((16384,), dtype('float32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'tokens': ((16384,), dtype('uint32'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0)), 'valid_tokens': ((16384,), dtype('bool'), StreamExecutorGpuDevice(id=0, process_index=0, slice_index=0))}}
2023-07-08 12:39:05,023 [MainThread  ] [INFO ]  Transformed the model function
2023-07-08 12:39:05,822 [MainThread  ] [INFO ]  Done initing {'EHRTransformer/~/CLMBRTask/~/linear': {'b': ((8192,), dtype('float32')), 'w': ((256, 8192), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/embed': {'embeddings': ((2048, 256), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/linear': {'b': ((1024,), dtype('float32')), 'w': ((256, 1024), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/linear_1': {'b': ((256,), dtype('float32')), 'w': ((512, 256), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/rms_norm': {'scale': ((256,), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/rms_norm': {'scale': ((256,), dtype('float32'))}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/rms_norm_1': {'scale': ((256,), dtype('float32'))}}
2023-07-08 12:39:05,823 [MainThread  ] [INFO ]  Total params 3024896
2023-07-08 12:39:05,823 [MainThread  ] [INFO ]  total steps 100 num train batches 1
2023-07-08 12:39:05,824 [MainThread  ] [INFO ]  Applying decay mask {'EHRTransformer/~/CLMBRTask/~/linear': {'b': False, 'w': True}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/embed': {'embeddings': False}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/linear': {'b': False, 'w': True}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/linear_1': {'b': False, 'w': True}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/loop_0/TransformerBlock/~/rms_norm': {'scale': False}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/rms_norm': {'scale': False}, 'EHRTransformer/~/TransformerFeaturizer/~/Transformer/~/rms_norm_1': {'scale': False}}
2023-07-08 12:39:05,824 [MainThread  ] [INFO ]  Using weight decay 0
2023-07-08 12:39:06,226 [MainThread  ] [INFO ]  Starting loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=array(0, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:07,682 [MainThread  ] [INFO ]  Starting train loss {'loss': 9.361560821533203, 'loss2': 9.361560821533203, 'c_statistic': -9.361560821533203}
2023-07-08 12:39:08,244 [MainThread  ] [INFO ]  Starting dev loss {'loss': 9.389105796813965, 'loss2': 9.389105796813965, 'c_statistic': -9.389105796813965}
2023-07-08 12:39:08,367 [MainThread  ] [INFO ]  [Step 0]
2023-07-08 12:39:10,975 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(1, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:11,653 [MainThread  ] [INFO ]  Train loss {'loss': 9.361560821533203, 'loss2': 9.361560821533203, 'c_statistic': -9.361560821533203}
2023-07-08 12:39:12,080 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389105796813965, 'loss2': 9.389105796813965, 'c_statistic': -9.389105796813965}
2023-07-08 12:39:12,231 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,582 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(2, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,594 [MainThread  ] [INFO ]  Train loss {'loss': 9.361593246459961, 'loss2': 9.361593246459961, 'c_statistic': -9.361593246459961}
2023-07-08 12:39:13,599 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389192581176758, 'loss2': 9.389192581176758, 'c_statistic': -9.389192581176758}
2023-07-08 12:39:13,599 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,604 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(3, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,614 [MainThread  ] [INFO ]  Train loss {'loss': 9.361457824707031, 'loss2': 9.361457824707031, 'c_statistic': -9.361457824707031}
2023-07-08 12:39:13,618 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389452934265137, 'loss2': 9.389452934265137, 'c_statistic': -9.389452934265137}
2023-07-08 12:39:13,618 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,622 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(4, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,632 [MainThread  ] [INFO ]  Train loss {'loss': 9.36137866973877, 'loss2': 9.36137866973877, 'c_statistic': -9.36137866973877}
2023-07-08 12:39:13,637 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389192581176758, 'loss2': 9.389192581176758, 'c_statistic': -9.389192581176758}
2023-07-08 12:39:13,637 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,641 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(5, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,651 [MainThread  ] [INFO ]  Train loss {'loss': 9.361272811889648, 'loss2': 9.361272811889648, 'c_statistic': -9.361272811889648}
2023-07-08 12:39:13,656 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389105796813965, 'loss2': 9.389105796813965, 'c_statistic': -9.389105796813965}
2023-07-08 12:39:13,656 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,659 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(6, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,669 [MainThread  ] [INFO ]  Train loss {'loss': 9.360976219177246, 'loss2': 9.360976219177246, 'c_statistic': -9.360976219177246}
2023-07-08 12:39:13,674 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389019012451172, 'loss2': 9.389019012451172, 'c_statistic': -9.389019012451172}
2023-07-08 12:39:13,794 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,799 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(7, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,810 [MainThread  ] [INFO ]  Train loss {'loss': 9.360629081726074, 'loss2': 9.360629081726074, 'c_statistic': -9.360629081726074}
2023-07-08 12:39:13,815 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389105796813965, 'loss2': 9.389105796813965, 'c_statistic': -9.389105796813965}
2023-07-08 12:39:13,815 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,820 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(8, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,831 [MainThread  ] [INFO ]  Train loss {'loss': 9.360361099243164, 'loss2': 9.360361099243164, 'c_statistic': -9.360361099243164}
2023-07-08 12:39:13,835 [MainThread  ] [INFO ]  Dev loss {'loss': 9.388845443725586, 'loss2': 9.388845443725586, 'c_statistic': -9.388845443725586}
2023-07-08 12:39:13,923 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,928 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(9, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,938 [MainThread  ] [INFO ]  Train loss {'loss': 9.360023498535156, 'loss2': 9.360023498535156, 'c_statistic': -9.360023498535156}
2023-07-08 12:39:13,943 [MainThread  ] [INFO ]  Dev loss {'loss': 9.388845443725586, 'loss2': 9.388845443725586, 'c_statistic': -9.388845443725586}
2023-07-08 12:39:13,943 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,946 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(10, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,957 [MainThread  ] [INFO ]  Train loss {'loss': 9.359622955322266, 'loss2': 9.359622955322266, 'c_statistic': -9.359622955322266}
2023-07-08 12:39:13,961 [MainThread  ] [INFO ]  Dev loss {'loss': 9.389019012451172, 'loss2': 9.389019012451172, 'c_statistic': -9.389019012451172}
2023-07-08 12:39:13,962 [MainThread  ] [INFO ]  Continuing to train ...
2023-07-08 12:39:13,966 [MainThread  ] [INFO ]  Loss scale DynamicLossScale(loss_scale=Array(32768., dtype=float32), counter=Array(11, dtype=int32), period=2000, factor=2, min_loss_scale=array(1., dtype=float32))
2023-07-08 12:39:13,976 [MainThread  ] [INFO ]  Train loss {'loss': 9.359251022338867, 'loss2': 9.359251022338867, 'c_statistic': -9.359251022338867}
2023-07-08 12:39:13,980 [MainThread  ] [INFO ]  Dev loss {'loss': 9.388758659362793, 'loss2': 9.388758659362793, 'c_statistic': -9.388758659362793}
2023-07-08 12:39:14,051 [MainThread  ] [INFO ]  Stopping due to max iter
