load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
  name = "com_google_absl",
  urls = ["https://github.com/abseil/abseil-cpp/archive/a59b4daa07a14326d2ceb28cc6d0e079feea3338.zip"],
  strip_prefix = "abseil-cpp-a59b4daa07a14326d2ceb28cc6d0e079feea3338",
)

http_archive(
    name = "gtest",
    url = "https://github.com/google/googletest/archive/release-1.10.0.zip",
    sha256 = "94c634d499558a76fa649edb13721dce6e98fb1e7018dfaeba3cd7a083945e91",
    strip_prefix = "googletest-release-1.10.0",
)

new_git_repository(
    name = "concurrentqueue",
    remote = "https://github.com/cameron314/concurrentqueue.git",
    commit = "79cec4c3bf1ca23ea4a03adfcd3c2c3659684dd2",
    shallow_since = "1580387311 -0500",
    build_file_content = """

cc_library(
    name = "concurrentqueue",
    hdrs = ["concurrentqueue.h", "blockingconcurrentqueue.h", "lightweightsemaphore.h"],
    visibility = ["//visibility:public"],
)
""",
)

http_archive(
    name = "readerwriterqueue",
    url = "https://github.com/cameron314/readerwriterqueue/archive/refs/tags/v1.0.6.tar.gz",
    strip_prefix = "readerwriterqueue-1.0.6",
    sha256 = "fc68f55bbd49a8b646462695e1777fb8f2c0b4f342d5e6574135211312ba56c1",
    build_file_content = """

cc_library(
    name = "readerwriterqueue",
    hdrs = ["readerwritercircularbuffer.h", "readerwriterqueue.h", "atomicops.h"],
    visibility = ["//visibility:public"],
)
""",
)

pybind11_bazel_version = "9a24c33cbdc510fa60ab7f5ffb7d80ab89272799"

http_archive(
  name = "pybind11_bazel",
  strip_prefix = "pybind11_bazel-" + pybind11_bazel_version,
  urls = ["https://github.com/pybind/pybind11_bazel/archive/" + pybind11_bazel_version + ".tar.gz"],
  sha256 = "32feba648e364da83b0876713cca8a7113f58433cee0680591218dbc202f1392",
)

pybind11_version = 'aa304c9c7d725ffb9d10af08a3b34cb372307020'

# We still require the pybind library.
http_archive(
  name = "pybind11",
  build_file = "@pybind11_bazel//:pybind11.BUILD",
  strip_prefix = "pybind11-" + pybind11_version,
  urls = ["https://github.com/pybind/pybind11/archive/" + pybind11_version + ".tar.gz"],
  sha256 = "dcda69c3355ce81407a18d9f3aa3fdfd0a84a7e19218356d0c4768cbe1cda02b",
)

load("@pybind11_bazel//:python_configure.bzl", "python_configure")
python_configure(name = "local_config_python")

http_archive(
    name = "streamvbyte",
    url = "https://github.com/lemire/streamvbyte/archive/refs/tags/v0.5.1.zip",
    strip_prefix = "streamvbyte-0.5.1",
    build_file_content = """
cc_library (
    name = "streamvbyte",
    hdrs = glob(["include/*"]) + glob(["src/*"]),
    srcs = [
        "src/streamvbyte_decode.c",
        "src/streamvbyte_encode.c",
        "src/streamvbytedelta_decode.c",
        "src/streamvbytedelta_encode.c",
        "src/streamvbyte_0124_encode.c",
        "src/streamvbyte_0124_decode.c",
        "src/streamvbyte_zigzag.c"
    ],
    visibility = ["//visibility:public"],
    includes = ["include"],
    copts = ["-std=c99"],
)
""",
    sha256 = "7d5899e0a8908db423dca82259388a291c642cc335d5c6ef6a6beb08be39b0ef",
)

new_git_repository(
    name = "json",
    commit = "e7b3b40b5a95bc74b9a7f662830a27c49ffc01b4",
    remote = "https://github.com/nlohmann/json.git",
     build_file_content = """
cc_library (
    name = "json",
    hdrs = glob(["include/nlohmann/**"]),
     visibility = ["//visibility:public"],
     includes = ["include"],
 )
 """,
   shallow_since = "1573989704 +0100"
)

new_git_repository(
    name = "picosha2",
    commit = "b699e6c900be6e00152db5a3d123c1db42ea13d0",
    remote = "https://github.com/okdshin/PicoSHA2.git",
    build_file_content = """
cc_library (
    name = "picosha2",
    hdrs = ['picosha2.h'],
    visibility = ["//visibility:public"],
)
""",
shallow_since = "1531968639 +0900"
)

http_archive(
    name = "rules_foreign_cc",
    sha256 = "2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51",
    strip_prefix = "rules_foreign_cc-0.9.0",
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz",
)

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
rules_foreign_cc_dependencies()


# Group the sources of the library so that CMake rule have access to it
all_content = """filegroup(name = "all", srcs = glob(["**"]), visibility = ["//visibility:public"])"""

http_archive(
    name = "source_zstd",
    url = "https://github.com/facebook/zstd/releases/download/v1.5.2/zstd-1.5.2.tar.gz",
    strip_prefix="zstd-1.5.2",
    build_file_content = all_content,
    sha256 = "7c42d56fac126929a6a85dbc73ff1db2411d04f104fae9bdea51305663a83fd0",
)

_RULES_BOOST_COMMIT = "ce6bd1a54c9527ffee7d0a87e97a2bdd50162ac2"

http_archive(
    name = "com_github_nelhage_rules_boost",
    strip_prefix = "rules_boost-%s" % _RULES_BOOST_COMMIT,
    sha256 = "781c5413ce5d5ae8e0f90e524dc712e0ccc329bf4d5dc5850d883e64db8eff9b",
    urls = [
        "https://github.com/nelhage/rules_boost/archive/%s.tar.gz" % _RULES_BOOST_COMMIT,
    ],
)

load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")
boost_deps()

http_archive(
    name = "com_github_storypku_bazel_iwyu",
    strip_prefix = "bazel_iwyu-0.0.5",
    sha256 = "b4596e4f11e61c1ead77065dca8755fccff51e98a903b79ff61562c93ae7138d",
    urls = [
        "https://github.com/storypku/bazel_iwyu/archive/0.0.5.tar.gz",
    ],
)

load("@com_github_storypku_bazel_iwyu//bazel:dependencies.bzl", "bazel_iwyu_dependencies")
bazel_iwyu_dependencies()

git_repository(
       name = "bazel_clang_tidy",
       commit = "068891fa0720b9ce24ee9649ace0a5ce4f93e417",
       remote = "https://github.com/Lalaland/bazel_clang_tidy.git",
       shallow_since = "1665975942 +0000",
)
